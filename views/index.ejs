<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('./partials/head'); %>
    <!-- <style>
      body {
        overflow-y: hidden;
      }
    </style> -->
    <link rel="stylesheet" href="/css/chat.css" type="text/css" />
  </head>

  <body>
    <%- include('./partials/navbar'); %>
    <div class="ui center aligned padded grid homebuttongrid">
      <div class="six wide column">
        <button
          onclick="window.location.href='/soloplay'"
          class="large ui button massive circular homebuttons"
        >
          Play solo
        </button>
      </div>
      <div class="six wide column">
        <button
          onclick="window.location.href='/room_details'"
          class="large ui button massive circular homebuttons"
        >
          Play with a friend
        </button>
      </div>
      <div class="four wide grey column">
        <h1 class="headers ui header">Friends</h1>
        <div class="ui divided very relaxed huge list" id="friendlist"></div>
        <h1 class="headers ui header">Incoming</h1>
        <div class="ui divided very relaxed huge list" id="incominglist"></div>
        <h1 class="headers ui header">Outgoing</h1>
        <div class="ui divided very relaxed huge list" id="outgoinglist"></div>
      </div>
    </div>
    <script>
      //   var chat = document.getElementById("chat");
      //   chat.scrollTop = chat.scrollHeight - chat.clientHeight;
      var people = { friends: [], incoming: [], outgoing: [] };
      var histories = [];
      function openChat(user_id) {
        var chat = document.getElementsByClassName("center-chat")[0];
        var chat_messages = document.getElementById("chat");
        if (chat.style.display == "block" && chat.id == user_id) {
          chat.style.display = "none";
          chat_messages.innerHTML = '';
          return;
        }

        //find the person details from the id
        var person = {};
        for (var key of Object.keys(people)) {
          people[`${key}`].every(function (p, index) {
            if (p.user_id == user_id) {
              person = p;
              return false;
            } else return true;
          });
        }
        //get the messages
        var messages = [];
        var cached = false;
        console.log(histories);
        for (h in histories) {
          console.log(h);
          if (user_id == histories[h].user_id) {
            messages = histories[h].messages;
            cached = true;
            showChat();
            break;
          }
        }
        if (!cached) {
          fetch(`/api/user/chat/${user_id}`, {
            method: "GET",
            headers: {
              "Content-type": "application/json; charset=UTF-8",
              Authorization: `Bearer ${localStorage.getItem("jwt")}`,
            },
          })
            .then((response) => response.json())
            .then((json) => {
              console.log(json);
              messages = json;
              histories.push({ user_id: user_id, messages: messages });
              showChat();
            });
        }
        //open the chat
        function showChat() {
          console.log(chat);
          document.getElementById("chat-name").textContent = person.username;
          document.getElementById("chat-location").textContent =
            person.city_name;
          messages.sort(function (x, y) {
            return x.timestamp - y.timestamp;
          });
          for (message in messages) {
            var text = document.createElement("div");
            text.className =
              messages[message].sender_id == user_id
                ? "message other"
                : "message self";
            var content = document.createTextNode(messages[message].content);
            text.appendChild(content);
            chat_messages.appendChild(text);
          }
          chat.style.display = "block";
          chat.id = user_id;
        }
      }

      fetch("/api/user/friends", {
        method: "GET",
        headers: {
          "Content-type": "application/json; charset=UTF-8",
          Authorization: `Bearer ${localStorage.getItem("jwt")}`,
        },
      })
        .then((response) => response.json())
        .then((json) => {
          people = json;
          console.log(people);
          renderFriends();
        });
      //get friends list from fetch
      function renderFriends() {
        var friendlist = document.getElementById("friendlist");
        people.friends.forEach((element) => {
          var item = document.createElement("div");
          item.setAttribute("class", "item");
          //this only works if everything is in the same line
          item.innerHTML =
            "<button class='ui button' onclick='openChat(" +
            element.user_id +
            ")'><i class='large user circle icon'></i>" +
            element.username +
            "</button> ";
          friendlist.appendChild(item);
        });
        var incominglist = document.getElementById("incominglist");
        people.incoming.forEach((element) => {
          var item = document.createElement("div");
          item.setAttribute("class", "item");
          //this only works if everything is in the same line
          item.innerHTML =
            "<button class='ui button' onclick='openChat(" +
            element.user_id +
            ")'><i class='large user circle icon'></i>" +
            element.username +
            "</button> ";
          incominglist.appendChild(item);
        });
        var outgoinglist = document.getElementById("outgoinglist");
        people.outgoing.forEach((element) => {
          var item = document.createElement("div");
          item.setAttribute("class", "item");
          //this only works if everything is in the same line
          item.innerHTML =
            "<button class='ui button' onclick='openChat(" +
            element.user_id +
            ")'><i class='large user circle icon'></i>" +
            element.username +
            "</button> ";
          outgoinglist.appendChild(item);
        });
      }
    </script>
  </body>
  <div class="center-chat" id="0">
    <div class="chat">
      <div class="contact bar">
        <div class="pic stark"></div>
        <div class="name" id="chat-name">Tony Stark</div>
        <div class="location" id="chat-location">Today at 12:56</div>
      </div>
      <div class="messages" id="chat">
        <!-- <div class="time">Today at 11:41</div>
        <div class="message self">Hey, man! What's up, Mr Stark?Â ðŸ‘‹</div>
        <div class="message other">Kid, where'd you come from?</div>
        <div class="message self">Field trip! ðŸ¤£</div>
        <div class="message self">
          Uh, what is this guy's problem, Mr. Stark? ðŸ¤”
        </div>
        <div class="message other">
          Uh, he's from space, he came here to steal a necklace from a wizard.
        </div>
        <div class="message other">
          <div class="typing typing-1"></div>
          <div class="typing typing-2"></div>
          <div class="typing typing-3"></div>
        </div> -->
      </div>
      <div class="input">
        <i class="fas fa-camera"></i><i class="far fa-laugh-beam"></i
        ><input placeholder="Type your message here!" type="text" /><i
          class="fas fa-microphone"
        ></i>
      </div>
    </div>
  </div>
</html>
